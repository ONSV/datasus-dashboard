[{"name":"app.R","content":"library(shiny)\r\nlibrary(ggplot2)\r\nlibrary(bslib)\r\nlibrary(onsvplot)\r\nlibrary(plotly)\r\nlibrary(leaflet)\r\nlibrary(here)\r\nlibrary(shinycssloaders)\r\nsource(here(\"R\",\"utils.R\"))\r\n\r\n## Home ---\r\n\r\nhome_panel <- nav_panel(\r\n  value = \"home\",\r\n  title = \"Home\",\r\n  icon = bsicons::bs_icon(\"house\"),\r\n  layout_columns(\r\n    fill = FALSE,\r\n    height = \"90px\",\r\n    value_box(\r\n      title = \"Município\",\r\n      value = textOutput(\r\n        outputId = \"municipioBox\"\r\n      )\r\n    ),\r\n    value_box(\r\n      title = \"Estado / UF\",\r\n      value = textOutput(\r\n        outputId = \"ufBox\"\r\n      )\r\n    ),\r\n    value_box(\r\n      title = \"Região\",\r\n      value = textOutput(\r\n        outputId = \"regiaoBox\"\r\n      )\r\n    ),\r\n    value_box(\r\n      title = \"Quantidade de óbitos\",\r\n      value = textOutput(\r\n        outputId = \"obitosBox\"\r\n      )\r\n    )\r\n  ),\r\n  tabsetPanel(\r\n    type = \"pills\",\r\n    tabPanel(\r\n      \"Mapa\",\r\n      layout_columns(\r\n        card(\r\n          card_header(\"Mapa\"),\r\n          full_screen = TRUE,\r\n          withSpinner(leafletOutput(outputId = \"mapa\", height = \"500px\"),\r\n                      type = 8, color = onsv_palette$blue),\r\n          min_height = \"400px\",\r\n          height = \"600px\"\r\n        )\r\n      )\r\n    ),\r\n    tabPanel(\r\n      \"Gráficos\",\r\n      layout_columns(\r\n        col_widths = c(6, 6),\r\n        card(\r\n          card_header(\"Pirâmide etária das vítimas\"),\r\n          full_screen = TRUE,\r\n          withSpinner(plotlyOutput(outputId = \"piramide\"), type = 8,\r\n                      color = onsv_palette$blue)\r\n        ),\r\n        card(\r\n          card_header(\"Série temporal\"),\r\n          full_screen = TRUE,\r\n          withSpinner(plotlyOutput(outputId = \"serie\"), type = 8,\r\n                      color = onsv_palette$blue)\r\n        ),\r\n        card(\r\n          card_header(\"Modo de transporte das vítimas\"),\r\n          full_screen = TRUE,\r\n          withSpinner(plotlyOutput(outputId = \"modal\"), type = 8,\r\n                      color = onsv_palette$blue)\r\n        ),\r\n        card(\r\n          card_header(\"Modo de transporte e faixa etária das vítimas\"),\r\n          full_screen = TRUE,\r\n          withSpinner(plotlyOutput(outputId = \"heatmap\"), type = 8,\r\n                      color = onsv_palette$blue)\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n## Sobre ----\r\n\r\nabout_panel <- nav_panel(\r\n  value = \"about\",\r\n  title = \"Sobre\",\r\n  icon = bsicons::bs_icon(\"info-circle\"),\r\n  layout_columns(\r\n    card(\r\n      card_header(\"Metodologia\"),\r\n      includeMarkdown(\"../text/metodologia.md\")\r\n    ),\r\n    card(\r\n      card_header(\"Versionamento\"),\r\n      includeMarkdown(\"../text/versionamento.md\")\r\n    )\r\n  )\r\n)\r\n\r\n## Sidebar ----\r\n\r\nfilter_sidebar <- sidebar(\r\n  title = \"Filtros\",\r\n  selectizeInput(\r\n    inputId = \"uf\",\r\n    label = \"Selecione a UF\",\r\n    choices = sort(unique(lista_municipios$abbrev_state)),\r\n    selected = \"SP\"\r\n  ),\r\n  selectizeInput(\r\n    inputId = \"municipio\",\r\n    label = \"Selecione o município\",\r\n    choices = select_filter(lista_municipios, \"SP\")\r\n  ),\r\n  selectizeInput(\r\n    inputId = \"ano\",\r\n    label = \"Selecione o ano\",\r\n    choices = seq(1996, 2023, 1),\r\n    selected = last(seq(1996, 2023, 1))\r\n  ),\r\n  actionButton(\r\n    inputId = \"filter\",\r\n    label = \"Aplicar\",\r\n    icon = icon(\"cog\"),\r\n    class = \"btn-primary\"\r\n  )\r\n)\r\n\r\n## UI ----\r\n\r\nui <- page_navbar(\r\n  title = \"Óbitos no Trânsito Brasileiro\",\r\n  home_panel,\r\n  about_panel,\r\n  sidebar = filter_sidebar,\r\n  bg = onsv_palette$blue,\r\n  theme = bs_theme(\r\n    primary = onsv_palette$blue,\r\n    warning = onsv_palette$yellow,\r\n    danger = onsv_palette$red,\r\n    success = onsv_palette$green\r\n  )\r\n)\r\n\r\n## Server -----\r\n\r\nserver <- function(input, output) {\r\n  \r\n  observe({\r\n    updateSelectizeInput(inputId = \"municipio\", \r\n                         choices = select_filter(lista_municipios, input$uf))\r\n  })\r\n  \r\n  make_map <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    prep_map(rtdeaths, input$ano, input$uf, input$municipio)\r\n  })\r\n  \r\n  make_pyramid <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    prep_pyramid(rtdeaths, input$ano, input$municipio)\r\n  })\r\n  \r\n  make_ts <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    prep_ts(rtdeaths, input$municipio)\r\n  })\r\n  \r\n  make_bars <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    prep_bars(rtdeaths, input$ano, input$municipio)\r\n  })\r\n  \r\n  make_heatmap <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    prep_heatmap(rtdeaths, input$ano, input$municipio)\r\n  })\r\n  \r\n  get_muni <- eventReactive(input$filter, {\r\n    req(input$municipio)\r\n    code_to_name_muni(input$municipio)\r\n  })\r\n  \r\n  get_uf <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    uf_acronym_to_name(input$uf)\r\n  })\r\n  \r\n  get_region <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    uf_to_region(input$uf)\r\n  })\r\n  \r\n  get_deaths <- eventReactive(input$filter, {\r\n    req(input$uf)\r\n    req(input$ano)\r\n    req(input$municipio)\r\n    filter(\r\n      rtdeaths, \r\n      ano_ocorrencia == input$ano, \r\n      cod_municipio_ocor == input$municipio\r\n    ) |> nrow()\r\n  })\r\n  \r\n  output$municipioBox <- renderText({\r\n    get_muni()\r\n  })\r\n  output$ufBox <- renderText({\r\n    get_uf()\r\n  })\r\n  output$regiaoBox <- renderText({\r\n    get_region()\r\n  })\r\n  output$obitosBox <- renderText({\r\n    get_deaths()\r\n  })\r\n  output$mapa <- renderLeaflet({\r\n    make_map()\r\n  })\r\n  output$piramide <- renderPlotly({\r\n    make_pyramid()\r\n  })\r\n  output$serie <- renderPlotly({\r\n    make_ts()\r\n  })\r\n  output$modal <- renderPlotly({\r\n    make_bars()\r\n  })\r\n  output$heatmap <- renderPlotly({\r\n    make_heatmap()\r\n  })\r\n}\r\n\r\nshinyApp(ui, server)\r\n","type":"text"}]
